#BlueJ class context
comment0.target=GameWord
comment0.text=\r\n\ The\ class\ GameWord\ creates\ objects\ and\ utilizes\ methods\ for\ the\ hangman\ game.\r\n\ \r\n\ @author\ Austin\ Lowery\r\n\ @version\ 2/23/2019\r\n
comment1.params=
comment1.target=GameWord()
comment1.text=This\ no-args\ constructor\ sets\ all\ fields\ to\ their\ default\ value.\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=This\ method\ returns\ a\ string\ with\ a\ separator,\ the\ phrase\ that\ is\ in\ the\ progress\ of\ being\ deciphered,\ and\ the\ state\ of\ the\ hangman.\r\n@return\ String\ -\ a\ string\ representing\ the\ printed\ output\ of\ the\ game\ to\ the\ user.\r\n
comment2.params=phraseToGuess
comment2.target=GameWord(java.lang.String)
comment2.text=This\ constructor\ takes\ in\ the\ phrase\ to\ guess,\ sets\ the\ inProgress\ field\ to\ a\ string\ containing\ \r\n\ the\ same\ amount\ of\ underscores\ as\ the\ phrase\ does\ variables,\ and\ sets\ every\ other\ field\ to\ \r\n\ their\ default\ value.\r\n@param\ phraseToGuess\ the\ phrase\ used\ in\ the\ game\ of\ hangman\r\n
comment3.params=year
comment3.target=void\ setMoviePhrase(int)
comment3.text=This\ set\ method\ setMoviePhrase\ gets\ one\ of\ the\ top\ ten\ movies\ from\ wikipedia\ from\ a\ specific\ year\ and\ makes\ it\ \r\n\ the\ phrase\ for\ the\ hangman\ game.\r\n@param\ year\ the\ year\ chosen\ for\ which\ the\ top\ films\ are\ picked\r\n@throws\ Exception\r\n
comment4.params=phraseToGuess
comment4.target=void\ setPhrase(java.lang.String)
comment4.text=The\ set\ method\ setPhrase\ creates\ a\ new\ phrase\ for\ the\ game\ updating\ each\ respective\ field.\r\n@param\ phraseToGuess\ the\ phrase\ used\ in\ the\ game\ of\ hangman\r\n
comment5.params=
comment5.target=java.lang.String\ getPhrase()
comment5.text=This\ get\ method\ returns\ the\ phrase\ to\ the\ user.\r\n@return\ phrase\ -\ the\ phrase\ that\ is\ guessed\ in\ the\ hangman\ game.\r\n
comment6.params=
comment6.target=boolean\ getGameOver()
comment6.text=The\ get\ method\ getGameOver\ returns\ whether\ or\ not\ the\ user\ has\ lost.\r\n@return\ gameOver\ -\ boolean\ storing\ whether\ or\ not\ the\ user\ has\ lost.\r\n
comment7.params=symbol
comment7.target=void\ find(char)
comment7.text=The\ method\ find\ is\ used\ to\ check\ if\ the\ character\ guessed\ is\ within\ the\ phrase.\r\n@param\ symbol\ the\ symbol\ representing\ the\ guessed\ character\ within\ the\ phrase.\r\n
comment8.params=
comment8.target=boolean\ checkWin()
comment8.text=This\ method\ returns\ true\ if\ all\ characters\ in\ the\ phrase\ has\ been\ guessed,\ otherwise,\ it\ returns\ false\r\n@return\ match\ -\ the\ boolean\ value\ used\ to\ determine\ if\ the\ game\ has\ been\ won\ or\ not.\r\n
comment9.params=
comment9.target=void\ updateState()
comment9.text=The\ method\ updateState\ adds\ a\ body\ part\ to\ the\ state\ of\ the\ hangman\ dependent\ on\ the\ number\ of\ wrong\ guesses\ made.\ \r\n\ If\ seven\ are\ made,\ it\ results\ in\ a\ game\ over.\r\n
numComments=11
